type User {
  id: ID!
  email: String!
  name: String!
  password: String!
  channels: [Channel]
}

type Channel {
  id: ID!
  name: String!
  members: [ChannelMember!]!
}

type ChannelMember {
  id: ID!
  member: User!
  channel: Channel!
  role: String!
}

type Query {
  me: User!
  users: [User]
  user(id: ID!): User
  channels: [Channel!]!
}

type Mutation {
  createUser(email: String!, password: String!, name: String!): User!
  createChannel(name: String!, member: Int): Channel!
  addChannelMember(channelId: Int, userId: Int): Boolean!
  # login(email: String!, password: String!)
  test: Boolean
}
